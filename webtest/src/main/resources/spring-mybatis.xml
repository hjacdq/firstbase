<?xml version="1.0" encoding="UTF-8"?>
<beans
xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/task  
http://www.springframework.org/schema/task/spring-task-3.0.xsd 
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
xmlns:task="http://www.springframework.org/schema/task">
	
	<!-- 1、应用属性配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 任务 -->
	<!-- <bean id="task" class="com.hj.task.Task"></bean>
	<task:scheduled-tasks>   
        <task:scheduled ref="task" method="start" cron="0 0/1 8-23 * * ?"/>
	</task:scheduled-tasks> -->
	
	<!-- 开启自动扫包 -->
    <context:component-scan base-package="com.hj">
       <!--制定扫包规则，不扫描@Controller注解的JAVA类，其他的还是要扫描  -->
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
	<!-- 2、数据源 -->  
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
          <property name="driverClassName" value="${jdbc.driverClassName}"/>  
          <property name="url"  value="${jdbc.url}" />  
          <property name="username" value="${jdbc.username}" />  
          <property name="password" value="${jdbc.password}" />  
    </bean> 
    
    <!-- 3、MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sqlmap-config.xml"/>
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.hj.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mapper/*.xml" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- 4、扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hj.dao" />
		<!-- property name="annotationClass" value="com.bst.bsj.website.dao.MyBatisMapper"/-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	
	 <!-- 配置redis数据库连接池 -->
    <!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="minIdle" value="${redis.pool.minIdle}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="lifo" value="${redis.pool.lifo}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean> -->
    
   <!--  <bean id="jedis.shardInfo" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg index="0" value="${redis.pool.host}" />
		<constructor-arg index="1" value="${redis.pool.port}" type="int" />
		<constructor-arg index="2" value="${redis.pool.timeout}" type="int"/> 
		<property name="password" value="${redis.pool.password}"/>  
	</bean> -->

    <!-- 配置redis共享连接池，业务层主要通过该bean访问redis服务器 -->
    <!-- <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <ref bean="jedis.shardInfo" />
            </list>
        </constructor-arg>
    </bean> -->
    
    <!-- redis begin -->
	<bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool"
		  destroy-method="destroy">
		<constructor-arg ref="redisPoolConfig" />
		<constructor-arg type="String" value="${redis.pool.host}" />
		<constructor-arg type="int" value="${redis.pool.port}" />
		<constructor-arg type="int" value="${redis.pool.timeout}" />
	</bean>

	<bean id="redisClient" class="com.hj.service.RedisClient">
		<constructor-arg name="jedisPool" ref="jedisPool" />
		<property name="expire" value="${redis.default.expire}" />
	</bean>

	<bean id="redis" class="com.hj.service.Redis">
		<constructor-arg name="jedisPool" ref="jedisPool" />
	</bean>
	<!-- redis end -->
    
    <!--配置事务管理器（必须先把对象先放到spring容器，这里是扫描的，否则事务管理失效）-->
   <context:component-scan base-package="com.hj.service.impl"></context:component-scan>
 
   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   <tx:annotation-driven transaction-manager="txManager"/>
	
</beans>